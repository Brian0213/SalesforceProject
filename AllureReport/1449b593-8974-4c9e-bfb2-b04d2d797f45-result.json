{"name": "test_salesCheck", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x003C6AB3+25587]\n\t(No symbol) [0x00359C54]\n\t(No symbol) [0x00252113]\n\t(No symbol) [0x00296F62]\n\t(No symbol) [0x002971AB]\n\t(No symbol) [0x002D7852]\n\t(No symbol) [0x002BABE4]\n\t(No symbol) [0x002D5370]\n\t(No symbol) [0x002BA936]\n\t(No symbol) [0x0028BA73]\n\t(No symbol) [0x0028C4CD]\n\tGetHandleVerifier [0x006A4C63+3032483]\n\tGetHandleVerifier [0x006F6B99+3368153]\n\tGetHandleVerifier [0x00458F62+624802]\n\tGetHandleVerifier [0x004607DC+655644]\n\t(No symbol) [0x0036260D]\n\t(No symbol) [0x0035F6D8]\n\t(No symbol) [0x0035F875]\n\t(No symbol) [0x00351CA6]\n\t(No symbol) [0x76077BA9]\n\tRtlInitializeExceptionChain [0x77ABBDAB+107]\n\tRtlClearBits [0x77ABBD2F+191]", "trace": "self = <testCases.test_salesCheck.Test_SalesCheck object at 0x000001D6EC1E38D0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d541f9265b22a580378965eca566e5cf\")>\n\n    @pytest.mark.sales\n    def test_salesCheck(self, setup):\n        self.logger.info(\"*****Starting The Sales Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(7)\n    \n        self.qp = QuotePage(self.driver)\n        self.logger.info(\"*****Starting The Quote Page Test*****\")\n        # Click the CPQ Quote Tab\n        self.qp.clickCpqQuoteTab()\n        time.sleep(5)\n        # Click the PM Quote\n        self.qp.PMQuote1()\n        time.sleep(2)\n        # Click the Edit Lines Button\n        self.qp.clickEditlines()\n        time.sleep(7)\n        # Switch to Frame\n        self.driver.switch_to.frame(0)\n        time.sleep(7)\n>       iframe = WebDriverWait(self.driver, 20).until(EC.presence_of_element_located((By.XPATH, '//div[@class=\"iframe-parent slds-template_iframe slds-card\"]')))\n\ntestCases\\test_salesCheck.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d541f9265b22a580378965eca566e5cf\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001D6EAC69F80>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x003C6AB3+25587]\nE       \t(No symbol) [0x00359C54]\nE       \t(No symbol) [0x00252113]\nE       \t(No symbol) [0x00296F62]\nE       \t(No symbol) [0x002971AB]\nE       \t(No symbol) [0x002D7852]\nE       \t(No symbol) [0x002BABE4]\nE       \t(No symbol) [0x002D5370]\nE       \t(No symbol) [0x002BA936]\nE       \t(No symbol) [0x0028BA73]\nE       \t(No symbol) [0x0028C4CD]\nE       \tGetHandleVerifier [0x006A4C63+3032483]\nE       \tGetHandleVerifier [0x006F6B99+3368153]\nE       \tGetHandleVerifier [0x00458F62+624802]\nE       \tGetHandleVerifier [0x004607DC+655644]\nE       \t(No symbol) [0x0036260D]\nE       \t(No symbol) [0x0035F6D8]\nE       \t(No symbol) [0x0035F875]\nE       \t(No symbol) [0x00351CA6]\nE       \t(No symbol) [0x76077BA9]\nE       \tRtlInitializeExceptionChain [0x77ABBDAB+107]\nE       \tRtlClearBits [0x77ABBD2F+191]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "2f0a48ae-440d-4284-a6d5-c1b625250e48-attachment.txt", "type": "text/plain"}], "start": 1727211268039, "stop": 1727211321494, "uuid": "0761966d-5fb5-40b0-aa05-52c0a6db2ad3", "historyId": "5fee88f8c11c6d1c530a22c8975e4478", "testCaseId": "5fee88f8c11c6d1c530a22c8975e4478", "fullName": "test_salesCheck.Test_SalesCheck#test_salesCheck", "labels": [{"name": "tag", "value": "sales"}, {"name": "suite", "value": "test_salesCheck"}, {"name": "subSuite", "value": "Test_SalesCheck"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "8636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesCheck"}]}