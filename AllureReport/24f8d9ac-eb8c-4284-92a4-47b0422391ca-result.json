{"name": "test_editOpportunityDescription", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x010FD933+25811]\n\t(No symbol) [0x0108E314]\n\t(No symbol) [0x00F82523]\n\t(No symbol) [0x00FC7483]\n\t(No symbol) [0x00FC765B]\n\t(No symbol) [0x01006BA2]\n\t(No symbol) [0x00FEAD74]\n\t(No symbol) [0x010046F0]\n\t(No symbol) [0x00FEAAC6]\n\t(No symbol) [0x00FBBEFD]\n\t(No symbol) [0x00FBC8FD]\n\tGetHandleVerifier [0x013CF143+2981091]\n\tGetHandleVerifier [0x01422FF9+3324825]\n\tGetHandleVerifier [0x0118B32F+605903]\n\tGetHandleVerifier [0x01192CBC+637020]\n\t(No symbol) [0x01096F4D]\n\t(No symbol) [0x01093DD8]\n\t(No symbol) [0x01093F75]\n\t(No symbol) [0x01086406]\n\t(No symbol) [0x76AB7BA9]\n\tRtlInitializeExceptionChain [0x776BBDAB+107]\n\tRtlClearBits [0x776BBD2F+191]", "trace": "self = <testCases.test_salesDescription.Test_SalesDescription object at 0x0000026223478450>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5ebdbb89e9257b6d655de9db67954840\")>\n\n    @pytest.mark.sale2e\n    def test_editOpportunityDescription(self, setup):\n        self.logger.info(\"*****Starting The Create Sales Quote From Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(5)\n    \n        # Define the Quote Page Driver\n        self.qp = QuotePage(self.driver)\n        windowsIDs = self.driver.window_handles\n        parentwindowid = windowsIDs[0]\n        childwindowid = windowsIDs[1]\n        print(parentwindowid, childwindowid)\n        # Click the Opportunity Tab\n        self.qp.clickOpportunityTab()\n        time.sleep(3)\n        # Click on an Opportunity ID\n        self.qp.clickOpportunityIDSales()\n        time.sleep(5)\n        self.qp.OppEdit()\n        self.driver.switch_to.window(childwindowid)\n        time.sleep(5)\n        # self.driver.execute_script(\"window.scrollBy(0, 500)\")\n        # time.sleep(5)\n        # self.driver.find_element(By.XPATH, '//div[@class=\"slds-form-element__control slds-grow textarea-container\"]').send_keys(\"Noted\")\n>       self.qp.winDescrip()\n\ntestCases\\test_salesDescription.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\QuotePage.py:252: in winDescrip\n    WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.XPATH, '//*[@id=\"sectionContent-1118\"]/dl/slot/records-record-layout-row[2]/slot/records-record-layout-item[2]/div/span/slot/records-record-layout-text-area/lightning-textarea/div[1]'))).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5ebdbb89e9257b6d655de9db67954840\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000262228A9F80>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x010FD933+25811]\nE       \t(No symbol) [0x0108E314]\nE       \t(No symbol) [0x00F82523]\nE       \t(No symbol) [0x00FC7483]\nE       \t(No symbol) [0x00FC765B]\nE       \t(No symbol) [0x01006BA2]\nE       \t(No symbol) [0x00FEAD74]\nE       \t(No symbol) [0x010046F0]\nE       \t(No symbol) [0x00FEAAC6]\nE       \t(No symbol) [0x00FBBEFD]\nE       \t(No symbol) [0x00FBC8FD]\nE       \tGetHandleVerifier [0x013CF143+2981091]\nE       \tGetHandleVerifier [0x01422FF9+3324825]\nE       \tGetHandleVerifier [0x0118B32F+605903]\nE       \tGetHandleVerifier [0x01192CBC+637020]\nE       \t(No symbol) [0x01096F4D]\nE       \t(No symbol) [0x01093DD8]\nE       \t(No symbol) [0x01093F75]\nE       \t(No symbol) [0x01086406]\nE       \t(No symbol) [0x76AB7BA9]\nE       \tRtlInitializeExceptionChain [0x776BBDAB+107]\nE       \tRtlClearBits [0x776BBD2F+191]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "c2274b07-775d-4055-974b-97239402a9c4-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "7cbe1e64-7480-46e0-83e6-e06185636ce7-attachment.txt", "type": "text/plain"}], "start": 1726503677682, "stop": 1726503712015, "uuid": "6377a5fb-538d-45d7-a5a4-9ad213bdf103", "historyId": "ad844ef24b0b44ae36d94b1ab9283a42", "testCaseId": "ad844ef24b0b44ae36d94b1ab9283a42", "fullName": "test_salesDescription.Test_SalesDescription#test_editOpportunityDescription", "labels": [{"name": "tag", "value": "sale2e"}, {"name": "suite", "value": "test_salesDescription"}, {"name": "subSuite", "value": "Test_SalesDescription"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "30340-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesDescription"}]}