{"name": "test_salesCheck", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00297143+25587]\n\t(No symbol) [0x0022A2E4]\n\t(No symbol) [0x00122113]\n\t(No symbol) [0x00166F62]\n\t(No symbol) [0x001671AB]\n\t(No symbol) [0x001A7852]\n\t(No symbol) [0x0018ABE4]\n\t(No symbol) [0x001A5370]\n\t(No symbol) [0x0018A936]\n\t(No symbol) [0x0015BA73]\n\t(No symbol) [0x0015C4CD]\n\tGetHandleVerifier [0x00574C63+3030803]\n\tGetHandleVerifier [0x005C6B99+3366473]\n\tGetHandleVerifier [0x003295F2+624802]\n\tGetHandleVerifier [0x00330E6C+655644]\n\t(No symbol) [0x00232C9D]\n\t(No symbol) [0x0022FD68]\n\t(No symbol) [0x0022FF05]\n\t(No symbol) [0x00222336]\n\t(No symbol) [0x766E7BA9]\n\tRtlInitializeExceptionChain [0x7733BDAB+107]\n\tRtlClearBits [0x7733BD2F+191]\n\t(No symbol) [0x00000000]", "trace": "self = <testCases.test_salesCheck.Test_SalesCheck object at 0x00000154D28A0F50>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0d3b09681225b3cc4a9db7ea49a23b8e\")>\n\n    @pytest.mark.sales\n    def test_salesCheck(self, setup):\n        self.logger.info(\"*****Starting The Sales Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(7)\n    \n        self.qp = QuotePage(self.driver)\n        self.logger.info(\"*****Starting The Quote Page Test*****\")\n        # Click the CPQ Quote Tab\n        self.qp.clickCpqQuoteTab()\n        time.sleep(5)\n        # Click the PM Quote\n        self.qp.SalesQuote1()\n        time.sleep(2)\n        # Click the Edit Lines Button\n        self.qp.clickEditlines()\n        time.sleep(7)\n        # Switch to Frame\n        self.driver.switch_to.frame(0)\n    \n        self.logger.info(\"*****Starting The Quote Line Editor Test*****\")\n        self.eqp = EditQuotePage(self.driver)\n        self.logger.info(\"*****Click The Add Products Button *****\")\n        self.eqp.AddProdButton()\n        time.sleep(3)\n        self.eqp.ApplyButton()\n        time.sleep(5)\n        # iframe = WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.XPATH, \"//iframe[@title='accessibility title']\")))\n        # time.sleep(10)\n        # self.driver.switch_to.frame(iframe)\n        # self.qp = QuotePage(self.driver)\n        windowsIDs = self.driver.window_handles\n        parentwindowid = windowsIDs[0]\n        childwindowid = windowsIDs[1]\n        print(parentwindowid, childwindowid)\n        self.driver.switch_to.window(childwindowid)\n        time.sleep(4)\n>       self.eqp.DoorProducts()\n\ntestCases\\test_salesCheck.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\EditQuotePage.py:344: in DoorProducts\n    shadow0 = WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, \"#sbPageContainer\"))).shadow_root\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0d3b09681225b3cc4a9db7ea49a23b8e\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000154D2850F40>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00297143+25587]\nE       \t(No symbol) [0x0022A2E4]\nE       \t(No symbol) [0x00122113]\nE       \t(No symbol) [0x00166F62]\nE       \t(No symbol) [0x001671AB]\nE       \t(No symbol) [0x001A7852]\nE       \t(No symbol) [0x0018ABE4]\nE       \t(No symbol) [0x001A5370]\nE       \t(No symbol) [0x0018A936]\nE       \t(No symbol) [0x0015BA73]\nE       \t(No symbol) [0x0015C4CD]\nE       \tGetHandleVerifier [0x00574C63+3030803]\nE       \tGetHandleVerifier [0x005C6B99+3366473]\nE       \tGetHandleVerifier [0x003295F2+624802]\nE       \tGetHandleVerifier [0x00330E6C+655644]\nE       \t(No symbol) [0x00232C9D]\nE       \t(No symbol) [0x0022FD68]\nE       \t(No symbol) [0x0022FF05]\nE       \t(No symbol) [0x00222336]\nE       \t(No symbol) [0x766E7BA9]\nE       \tRtlInitializeExceptionChain [0x7733BDAB+107]\nE       \tRtlClearBits [0x7733BD2F+191]\nE       \t(No symbol) [0x00000000]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "8b2b2614-78d0-48c1-9175-cd8378944eec-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "c896689c-ef5b-45e9-848c-c610bc4e0305-attachment.txt", "type": "text/plain"}], "start": 1728069084865, "stop": 1728069133894, "uuid": "c0faf9fd-b969-4968-a84a-781bd631f69e", "historyId": "5fee88f8c11c6d1c530a22c8975e4478", "testCaseId": "5fee88f8c11c6d1c530a22c8975e4478", "fullName": "test_salesCheck.Test_SalesCheck#test_salesCheck", "labels": [{"name": "tag", "value": "sales"}, {"name": "suite", "value": "test_salesCheck"}, {"name": "subSuite", "value": "Test_SalesCheck"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "31932-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesCheck"}]}