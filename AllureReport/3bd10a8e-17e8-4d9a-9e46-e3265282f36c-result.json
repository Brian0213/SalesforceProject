{"name": "test_PMOpportunity", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00958923+23283]\n\t(No symbol) [0x0091E934]\n\t(No symbol) [0x00850733]\n\t(No symbol) [0x0089326F]\n\t(No symbol) [0x008934AB]\n\t(No symbol) [0x008CEE42]\n\t(No symbol) [0x008B4464]\n\t(No symbol) [0x008CCB8D]\n\t(No symbol) [0x008B41B6]\n\t(No symbol) [0x00888017]\n\t(No symbol) [0x0088890D]\n\tGetHandleVerifier [0x00A4A5F3+1013699]\n\tGetHandleVerifier [0x00A53E4C+1052700]\n\tGetHandleVerifier [0x00A4D4B4+1025668]\n\tGetHandleVerifier [0x0097EA2B+179195]\n\t(No symbol) [0x00926833]\n\t(No symbol) [0x00923198]\n\t(No symbol) [0x00923337]\n\t(No symbol) [0x0091B4BE]\n\t(No symbol) [0x75487BA9]\n\tRtlInitializeExceptionChain [0x771ABDAB+107]\n\tRtlClearBits [0x771ABD2F+191]", "trace": "self = <testCases.test_pmOpportunity.Test_Opportunity object at 0x0000014EF228DF10>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"280e8fe9d1d8a5956a0eb70bc6dd1acf\")>\n\n    @pytest.mark.pm\n    def test_PMOpportunity(self, setup):\n        self.logger.info(\"*****Starting The New Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(7)\n    \n        self.Op = OpportunityPage(self.driver)\n        windowsIDs = self.driver.window_handles\n        parentwindowid = windowsIDs[0]\n        childwindowid = windowsIDs[1]\n        print(parentwindowid, childwindowid)\n        # Click the Account Tab\n        self.Op.clickAccountTab()\n        time.sleep(3)\n        # Click the Account Name\n        self.Op.clickAccountName()\n        time.sleep(3)\n        self.driver.execute_script(\"window.scrollBy(0, 100)\")\n        time.sleep(5)\n        # Click the Location Name\n>       self.Op.clickLocation()\n\ntestCases\\test_pmOpportunity.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\OpportunityPage.py:35: in clickLocation\n    location=WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.XPATH, \"//a[contains(text(),'Georgia Aquarium (Unknown) 357 Luckie Street Atlan')]\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"280e8fe9d1d8a5956a0eb70bc6dd1acf\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000014EF249DEE0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00958923+23283]\nE       \t(No symbol) [0x0091E934]\nE       \t(No symbol) [0x00850733]\nE       \t(No symbol) [0x0089326F]\nE       \t(No symbol) [0x008934AB]\nE       \t(No symbol) [0x008CEE42]\nE       \t(No symbol) [0x008B4464]\nE       \t(No symbol) [0x008CCB8D]\nE       \t(No symbol) [0x008B41B6]\nE       \t(No symbol) [0x00888017]\nE       \t(No symbol) [0x0088890D]\nE       \tGetHandleVerifier [0x00A4A5F3+1013699]\nE       \tGetHandleVerifier [0x00A53E4C+1052700]\nE       \tGetHandleVerifier [0x00A4D4B4+1025668]\nE       \tGetHandleVerifier [0x0097EA2B+179195]\nE       \t(No symbol) [0x00926833]\nE       \t(No symbol) [0x00923198]\nE       \t(No symbol) [0x00923337]\nE       \t(No symbol) [0x0091B4BE]\nE       \t(No symbol) [0x75487BA9]\nE       \tRtlInitializeExceptionChain [0x771ABDAB+107]\nE       \tRtlClearBits [0x771ABD2F+191]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "524283be-d02c-4312-bad8-8433903275df-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "84f8f45c-5a60-41b8-8f0e-289a63e2a0c4-attachment.txt", "type": "text/plain"}], "start": 1724269543951, "stop": 1724269578262, "uuid": "bfb87cb4-075f-405c-8ccc-a9309de757a6", "historyId": "650acf944a134ab4b432ad1f534f932f", "testCaseId": "650acf944a134ab4b432ad1f534f932f", "fullName": "test_pmOpportunity.Test_Opportunity#test_PMOpportunity", "labels": [{"name": "tag", "value": "pm"}, {"name": "suite", "value": "test_pmOpportunity"}, {"name": "subSuite", "value": "Test_Opportunity"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "25352-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_pmOpportunity"}]}