{"name": "test_salesCheck", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x003A8283+26163]\n\t(No symbol) [0x00339D34]\n\t(No symbol) [0x002324C3]\n\t(No symbol) [0x00277453]\n\t(No symbol) [0x0027762B]\n\t(No symbol) [0x002B6B62]\n\t(No symbol) [0x0029AD04]\n\t(No symbol) [0x002B4661]\n\t(No symbol) [0x0029AA56]\n\t(No symbol) [0x0026BE89]\n\t(No symbol) [0x0026C8CD]\n\tGetHandleVerifier [0x0067CF73+2994979]\n\tGetHandleVerifier [0x006D17E9+3341209]\n\tGetHandleVerifier [0x00437B5F+614159]\n\tGetHandleVerifier [0x0043F1EC+644508]\n\t(No symbol) [0x0034286D]\n\t(No symbol) [0x0033F768]\n\t(No symbol) [0x0033F905]\n\t(No symbol) [0x00331C86]\n\t(No symbol) [0x750D7BA9]\n\tRtlInitializeExceptionChain [0x7705BDAB+107]\n\tRtlClearBits [0x7705BD2F+191]", "trace": "self = <testCases.test_salesCheck.Test_SalesCheck object at 0x00000188A8549490>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6a53952cb378239e42e28a50e2383abe\")>\n\n    @pytest.mark.sales\n    def test_salesCheck(self, setup):\n        self.logger.info(\"*****Starting The Sales Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(7)\n    \n        self.qp = QuotePage(self.driver)\n        windowsIDs = self.driver.window_handles\n        parentwindowid = windowsIDs[0]\n        childwindowid = windowsIDs[1]\n        print(parentwindowid, childwindowid)\n        # Click the Opportunity Tab\n        self.qp.clickOpportunityTab()\n        time.sleep(3)\n        # Click on an Opportunity ID\n>       self.qp.SalesQuote1()\n\ntestCases\\test_salesCheck.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\QuotePage.py:57: in SalesQuote1\n    salesquote = WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.XPATH, \"//a[@class='slds-truncate'][normalize-space()='Q-07784']\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6a53952cb378239e42e28a50e2383abe\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000188A78E59E0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x003A8283+26163]\nE       \t(No symbol) [0x00339D34]\nE       \t(No symbol) [0x002324C3]\nE       \t(No symbol) [0x00277453]\nE       \t(No symbol) [0x0027762B]\nE       \t(No symbol) [0x002B6B62]\nE       \t(No symbol) [0x0029AD04]\nE       \t(No symbol) [0x002B4661]\nE       \t(No symbol) [0x0029AA56]\nE       \t(No symbol) [0x0026BE89]\nE       \t(No symbol) [0x0026C8CD]\nE       \tGetHandleVerifier [0x0067CF73+2994979]\nE       \tGetHandleVerifier [0x006D17E9+3341209]\nE       \tGetHandleVerifier [0x00437B5F+614159]\nE       \tGetHandleVerifier [0x0043F1EC+644508]\nE       \t(No symbol) [0x0034286D]\nE       \t(No symbol) [0x0033F768]\nE       \t(No symbol) [0x0033F905]\nE       \t(No symbol) [0x00331C86]\nE       \t(No symbol) [0x750D7BA9]\nE       \tRtlInitializeExceptionChain [0x7705BDAB+107]\nE       \tRtlClearBits [0x7705BD2F+191]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "d1a50b4d-3e01-4954-8dc2-79aa6c80d043-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "5f3cda93-68fe-43c0-bee4-a9c288137cf4-attachment.txt", "type": "text/plain"}], "start": 1724876252083, "stop": 1724876279682, "uuid": "b422aa1c-2c50-42c5-99e3-e3df2d945e47", "historyId": "5fee88f8c11c6d1c530a22c8975e4478", "testCaseId": "5fee88f8c11c6d1c530a22c8975e4478", "fullName": "test_salesCheck.Test_SalesCheck#test_salesCheck", "labels": [{"name": "tag", "value": "sales"}, {"name": "suite", "value": "test_salesCheck"}, {"name": "subSuite", "value": "Test_SalesCheck"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "26432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesCheck"}]}