{"name": "test_salesCheck", "status": "broken", "statusDetails": {"message": "AttributeError: 'Test_SalesCheck' object has no attribute 'assertEqual'", "trace": "self = <testCases.test_salesCheck.Test_SalesCheck object at 0x000001FB2FA0C510>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a2d410f3806444f78572b28a1252a72e\")>\n\n    @pytest.mark.sales\n    def test_salesCheck(self, setup):\n        self.logger.info(\"*****Starting The Sales Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(7)\n    \n        self.qp = QuotePage(self.driver)\n        windowsIDs = self.driver.window_handles\n        parentwindowid = windowsIDs[0]\n        childwindowid = windowsIDs[1]\n        print(parentwindowid, childwindowid)\n        # Click the Opportunity Tab\n        self.qp.clickOpportunityTab()\n        time.sleep(3)\n        # Click on an Opportunity ID\n        self.qp.clickOpportunityIDSales()\n        time.sleep(3)\n        # assert \"expected_text\" in self.driver.find_element(By.XPATH, \"//span[@class='test-id__field-label'][normalize-space()='Stage']\").get_attribute(self.driver, \"Closed Won Pending\")\n        # assert self.driver.find_element(By.XPATH, \"//span[@class='test-id__field-label'][normalize-space()='Stage']\").text == 'Closed Won Pending'\n        # assert self.driver.find_element(By.XPATH, \"//span[@class='test-id__field-label'][normalize-space()='Stage']\").get_attribute(\"Closed Won Pending\") == \"Closed Won Pending\"\n        input_field = self.driver.find_element(By.XPATH, \"//span[@class='test-id__field-label'][normalize-space()='Stage']\")\n        actual_value = input_field.get_attribute(\"Closed Won Pending\")\n        expected_value = \"Closed Won Pending\"\n>       self.assertEqual(actual_value, expected_value, \"The field\")\nE       AttributeError: 'Test_SalesCheck' object has no attribute 'assertEqual'\n\ntestCases\\test_salesCheck.py:73: AttributeError"}, "attachments": [{"name": "log", "source": "d53b0af9-7b27-4dfe-9fbc-f5cd4f126b38-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "35fb4ffa-63e7-41b8-b800-b33da105af61-attachment.txt", "type": "text/plain"}], "start": 1724334018377, "stop": 1724334037354, "uuid": "cd6b6d19-52b0-48d2-a3da-9d014148565a", "historyId": "5fee88f8c11c6d1c530a22c8975e4478", "testCaseId": "5fee88f8c11c6d1c530a22c8975e4478", "fullName": "test_salesCheck.Test_SalesCheck#test_salesCheck", "labels": [{"name": "tag", "value": "sales"}, {"name": "suite", "value": "test_salesCheck"}, {"name": "subSuite", "value": "Test_SalesCheck"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "32332-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesCheck"}]}