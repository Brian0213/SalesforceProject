{"name": "test_Opportunity", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x007238B3+24035]\n\t(No symbol) [0x006ABC44]\n\t(No symbol) [0x0058C2D3]\n\t(No symbol) [0x005CDC86]\n\t(No symbol) [0x005CDECB]\n\t(No symbol) [0x0060B9D2]\n\t(No symbol) [0x005EFED4]\n\t(No symbol) [0x0060953F]\n\t(No symbol) [0x005EFC26]\n\t(No symbol) [0x005C218C]\n\t(No symbol) [0x005C310D]\n\tGetHandleVerifier [0x009C96D3+2800643]\n\tGetHandleVerifier [0x00A2428E+3172286]\n\tGetHandleVerifier [0x00A1CEA2+3142610]\n\tGetHandleVerifier [0x007C6C60+692624]\n\t(No symbol) [0x006B4C5D]\n\t(No symbol) [0x006B1968]\n\t(No symbol) [0x006B1B00]\n\t(No symbol) [0x006A3FB0]\n\t(No symbol) [0x76317BA9]\n\tRtlInitializeExceptionChain [0x7729BDAB+107]\n\tRtlClearBits [0x7729BD2F+191]", "trace": "self = <testCases.test_salesOpportunity.Test_SalesOpportunity object at 0x000001EE3E660CD0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c338f57b9973fa4a4ed6310e4684062e\")>\n\n    @pytest.mark.sales\n    def test_Opportunity(self, setup):\n        self.logger.info(\"*****Starting The Sales Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # assert self.driver.current_window_handle == self.baseURL, \"Failed to open the website URL.\"\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(7)\n        assert \"Home | Salesforce\" in self.driver.title, \"Failed to log in; Home | Salesforce page not displayed.\"\n    \n        self.Op = OpportunityPage(self.driver)\n        windowsIDs = self.driver.window_handles\n        parentwindowid = windowsIDs[0]\n        childwindowid = windowsIDs[1]\n        print(parentwindowid, childwindowid)\n        # Click the Account Tab\n        self.logger.info(\"*****Click the Account Tab*****\")\n        self.Op.clickAccountTab()\n        time.sleep(3)\n        assert \"Accounts\" in self.driver.title, \"Failed to navigate to the Account tab.\"\n        # Click the Account Name\n        self.logger.info(\"*****Click the Account Name*****\")\n        self.Op.clickAccountName()\n        time.sleep(3)\n        self.driver.execute_script(\"window.scrollBy(0, 190)\")\n        time.sleep(5)\n        # Click the Location Name\n        self.logger.info(\"*****Click the Location Name*****\")\n>       self.Op.clickLocationUat()\n\ntestCases\\test_salesOpportunity.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\OpportunityPage.py:39: in clickLocationUat\n    location=WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.XPATH, \"//a[contains(text(),'Georgia Aquarium (Unknown) 357 Luckie Street North')]\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c338f57b9973fa4a4ed6310e4684062e\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001EE3DA49F80>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x007238B3+24035]\nE       \t(No symbol) [0x006ABC44]\nE       \t(No symbol) [0x0058C2D3]\nE       \t(No symbol) [0x005CDC86]\nE       \t(No symbol) [0x005CDECB]\nE       \t(No symbol) [0x0060B9D2]\nE       \t(No symbol) [0x005EFED4]\nE       \t(No symbol) [0x0060953F]\nE       \t(No symbol) [0x005EFC26]\nE       \t(No symbol) [0x005C218C]\nE       \t(No symbol) [0x005C310D]\nE       \tGetHandleVerifier [0x009C96D3+2800643]\nE       \tGetHandleVerifier [0x00A2428E+3172286]\nE       \tGetHandleVerifier [0x00A1CEA2+3142610]\nE       \tGetHandleVerifier [0x007C6C60+692624]\nE       \t(No symbol) [0x006B4C5D]\nE       \t(No symbol) [0x006B1968]\nE       \t(No symbol) [0x006B1B00]\nE       \t(No symbol) [0x006A3FB0]\nE       \t(No symbol) [0x76317BA9]\nE       \tRtlInitializeExceptionChain [0x7729BDAB+107]\nE       \tRtlClearBits [0x7729BD2F+191]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "95b964f9-cc5c-4726-805e-2d64c21690a3-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "ff147a4a-5670-41eb-ba77-cf9dd817c0f3-attachment.txt", "type": "text/plain"}], "start": 1730738337850, "stop": 1730738372842, "uuid": "90d68c0f-2c4d-4edb-bb70-5d6079c98686", "historyId": "d08e0d5dbdba94461afb41669c70da53", "testCaseId": "d08e0d5dbdba94461afb41669c70da53", "fullName": "test_salesOpportunity.Test_SalesOpportunity#test_Opportunity", "labels": [{"name": "tag", "value": "sales"}, {"name": "suite", "value": "test_salesOpportunity"}, {"name": "subSuite", "value": "Test_SalesOpportunity"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "20396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesOpportunity"}]}