{"name": "test_salesCheck", "status": "broken", "statusDetails": {"message": "AttributeError: 'str' object has no attribute 'is_selected'", "trace": "self = <testCases.test_salesCheck.Test_SalesCheck object at 0x000001D7AF653410>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ebb78f46602576fb6d6787bc527fbe6c\")>\n\n    @pytest.mark.sales\n    def test_salesCheck(self, setup):\n        self.logger.info(\"*****Starting The Sales Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(7)\n    \n        self.qp = QuotePage(self.driver)\n        windowsIDs = self.driver.window_handles\n        parentwindowid = windowsIDs[0]\n        childwindowid = windowsIDs[1]\n        print(parentwindowid, childwindowid)\n        # Click the Opportunity Tab\n        self.qp.clickCpqQuoteTab()\n        time.sleep(3)\n        # Click on an Opportunity ID\n        self.qp.SalesQuote1()\n        time.sleep(3)\n        self.driver.execute_script(\"window.scrollBy(0, 150)\")\n        time.sleep(3)\n        # Opportunity Assertions\n        # stage = self.driver.find_element(By.XPATH, \"//span[@class='test-id__field-value slds-form-element__static slds-grow word-break-ie11']\").text\n        # assert stage == \"Closed Won Pending\", \"Stage Is Not Correct\"\n        # assert \"Closed Won Pending\" in stage, \"Stage is Incorrect\"\n        # assert \"Closed Won Pending\" == \"Closed Won Pending\"\n        # order = self.driver.find_element(By.XPATH, \"//span[normalize-space()='Service - Commercial']\").text\n        # assert order == \"Service - Commercial\", \"Order Type Is Not Correct\"\n        # assert \"Service - Commercial\" in order, \"Order Type is Incorrect\"\n        # assert \"Service - Commercial\" == \"Service - Commercial\"\n        # orderS = self.driver.find_element(By.XPATH, \"//span[normalize-space()='Repair']\").text\n        # assert orderS == \"Repair\", \"OrderS Is Not Correct\"\n        # assert \"Repair\" in orderS, \"Order Type is Incorrect\"\n        # assert \"Repair\" == \"Repair\"\n        # OpportunityR = self.driver.find_element(By.XPATH, \"//span[normalize-space()='Miner Sales Opportunity']\").text\n        # assert OpportunityR == \"Miner Sales Opportunity\", \"OpportunityR Is Not Correct\"\n        # assert \"Miner Sales Opportunity\" in OpportunityR, \"OpportunityR is Incorrect\"\n        # assert \"Miner Sales Opportunity\" == \"Miner Sales Opportunity\"\n        # Quote Assertions\n        OpportunityQ = self.driver.find_element(By.XPATH, \"//slot[contains(text(),'MINOPPORTUNE0819-')]\").text\n        assert OpportunityQ == \"MINOPPORTUNE0819-\", \"MINOPPORTUNE0819- Is Not Correct\"\n        assert \"MINOPPORTUNE0819-\" in OpportunityQ, \"MINOPPORTUNE0819- is Incorrect\"\n        assert \"MINOPPORTUNE0819-\" == \"MINOPPORTUNE0819-\"\n        PayingP = self.driver.find_element(By.XPATH, \"//slot[contains(text(),'Georgia Aquarium, INC.')]\").text\n        assert PayingP == \"Georgia Aquarium, INC.\", \"Georgia Aquarium, INC. Is Not Correct\"\n        assert \"Georgia Aquarium, INC.\" in PayingP, \"Georgia Aquarium, INC. is Incorrect\"\n        assert \"Georgia Aquarium, INC.\" == \"Georgia Aquarium, INC.\"\n        Location = self.driver.find_element(By.XPATH, \"//slot[contains(text(),'Georgia Aquarium')]\").text\n        assert Location == \"Georgia Aquarium\", \"Georgia Aquarium Is Not Correct\"\n        assert \"Georgia Aquarium\" in Location, \"Georgia Aquarium is Incorrect\"\n        assert \"Georgia Aquarium\" == \"Georgia Aquarium\"\n        PriCheckBox = self.driver.find_element(By.XPATH, \"//lightning-input[@class='slds-form-element']//div[@class='slds-form-element__control slds-grow']\").text\n>       assert PriCheckBox.is_selected(), \"Primary Checkbox Is Not Correct\"\nE       AttributeError: 'str' object has no attribute 'is_selected'\n\ntestCases\\test_salesCheck.py:102: AttributeError"}, "attachments": [{"name": "log", "source": "ff038d10-a449-41a2-a374-58480e9f7144-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "700aafcc-d0ce-4455-bbc0-4df2b1fab1fa-attachment.txt", "type": "text/plain"}], "start": 1725639403590, "stop": 1725639424432, "uuid": "65499fd4-b5eb-436e-9253-73e558ea8078", "historyId": "5fee88f8c11c6d1c530a22c8975e4478", "testCaseId": "5fee88f8c11c6d1c530a22c8975e4478", "fullName": "test_salesCheck.Test_SalesCheck#test_salesCheck", "labels": [{"name": "tag", "value": "sales"}, {"name": "suite", "value": "test_salesCheck"}, {"name": "subSuite", "value": "Test_SalesCheck"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "34552-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesCheck"}]}