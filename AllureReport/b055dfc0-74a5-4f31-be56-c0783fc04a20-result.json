{"name": "test_salesCheck", "status": "failed", "statusDetails": {"message": "AssertionError: Georgia Aquarium, INC. Is Not Correct\nassert '' == 'Georgia Aquarium, INC.'\n  - Georgia Aquarium, INC.", "trace": "self = <testCases.test_salesCheck.Test_SalesCheck object at 0x0000019559774890>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"abae535eaa7d42bfe70e3859f4068ed8\")>\n\n    @pytest.mark.sales\n    def test_salesCheck(self, setup):\n        self.logger.info(\"*****Starting The Sales Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(7)\n    \n        self.qp = QuotePage(self.driver)\n        windowsIDs = self.driver.window_handles\n        parentwindowid = windowsIDs[0]\n        childwindowid = windowsIDs[1]\n        print(parentwindowid, childwindowid)\n        # Click the Opportunity Tab\n        self.qp.clickCpqQuoteTab()\n        time.sleep(3)\n        # Click on an Opportunity ID\n        self.qp.SalesQuote1()\n        time.sleep(3)\n        self.driver.execute_script(\"window.scrollBy(0, 150)\")\n        time.sleep(3)\n        # stage = self.driver.find_element(By.XPATH, \"//span[@class='test-id__field-value slds-form-element__static slds-grow word-break-ie11']\").text\n        # assert stage == \"Closed Won Pending\", \"Stage Is Not Correct\"\n        # assert \"Closed Won Pending\" in stage, \"Stage is Incorrect\"\n        # assert \"Closed Won Pending\" == \"Closed Won Pending\"\n        # order = self.driver.find_element(By.XPATH, \"//span[normalize-space()='Service - Commercial']\").text\n        # assert order == \"Service - Commercial\", \"Order Type Is Not Correct\"\n        # assert \"Service - Commercial\" in order, \"Order Type is Incorrect\"\n        # assert \"Service - Commercial\" == \"Service - Commercial\"\n        # orderS = self.driver.find_element(By.XPATH, \"//span[normalize-space()='Repair']\").text\n        # assert orderS == \"Repair\", \"OrderS Is Not Correct\"\n        # assert \"Repair\" in orderS, \"Order Type is Incorrect\"\n        # assert \"Repair\" == \"Repair\"\n        # OpportunityR = self.driver.find_element(By.XPATH, \"//span[normalize-space()='Miner Sales Opportunity']\").text\n        # assert OpportunityR == \"Miner Sales Opportunity\", \"OpportunityR Is Not Correct\"\n        # assert \"Miner Sales Opportunity\" in OpportunityR, \"OpportunityR is Incorrect\"\n        # assert \"Miner Sales Opportunity\" == \"Miner Sales Opportunity\"\n        PayParty = self.driver.find_element(By.XPATH, \"//span[normalize-space()='Georgia Aquarium']\").text\n>       assert PayParty == \"Georgia Aquarium, INC.\", \"Georgia Aquarium, INC. Is Not Correct\"\nE       AssertionError: Georgia Aquarium, INC. Is Not Correct\nE       assert '' == 'Georgia Aquarium, INC.'\nE         - Georgia Aquarium, INC.\n\ntestCases\\test_salesCheck.py:87: AssertionError"}, "attachments": [{"name": "log", "source": "f8ecc932-91f5-4005-9716-a6d56b34eb85-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "244857bb-ad6f-4b83-9249-cd0f578e7aa0-attachment.txt", "type": "text/plain"}], "start": 1724958845237, "stop": 1724958868520, "uuid": "2508ccaf-9add-4220-89f3-519085e8ba2c", "historyId": "5fee88f8c11c6d1c530a22c8975e4478", "testCaseId": "5fee88f8c11c6d1c530a22c8975e4478", "fullName": "test_salesCheck.Test_SalesCheck#test_salesCheck", "labels": [{"name": "tag", "value": "sales"}, {"name": "suite", "value": "test_salesCheck"}, {"name": "subSuite", "value": "Test_SalesCheck"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "32524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesCheck"}]}