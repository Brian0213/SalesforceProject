{"name": "test_Opportunity", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00F633E3+25059]\n\t(No symbol) [0x00EECDE4]\n\t(No symbol) [0x00DCBEC3]\n\t(No symbol) [0x00E0FD86]\n\t(No symbol) [0x00E0FFCB]\n\t(No symbol) [0x00E4D952]\n\t(No symbol) [0x00E31F44]\n\t(No symbol) [0x00E4B51E]\n\t(No symbol) [0x00E31C96]\n\t(No symbol) [0x00E03FAC]\n\t(No symbol) [0x00E04F3D]\n\tGetHandleVerifier [0x01255543+3113795]\n\tGetHandleVerifier [0x0126A20A+3198986]\n\tGetHandleVerifier [0x012629E2+3168226]\n\tGetHandleVerifier [0x01003250+680016]\n\t(No symbol) [0x00EF572D]\n\t(No symbol) [0x00EF29D8]\n\t(No symbol) [0x00EF2B75]\n\t(No symbol) [0x00EE57D0]\n\t(No symbol) [0x75EF7BA9]\n\tRtlInitializeExceptionChain [0x77C0BDAB+107]\n\tRtlClearBits [0x77C0BD2F+191]", "trace": "self = <testCases.test_salesOpportunity.Test_SalesOpportunity object at 0x000001DADD242D10>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ca5fe2abecb7c588d7ab19fdd36bc139\")>\n\n    @pytest.mark.sales\n    def test_Opportunity(self, setup):\n        self.logger.info(\"*****Starting The Sales Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # assert self.driver.current_window_handle == self.baseURL, \"Failed to open the website URL.\"\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(7)\n        assert \"Home | Salesforce\" in self.driver.title, \"Failed to log in; Home | Salesforce page not displayed.\"\n    \n        self.Op = OpportunityPage(self.driver)\n        windowsIDs = self.driver.window_handles\n        parentwindowid = windowsIDs[0]\n        childwindowid = windowsIDs[1]\n        print(parentwindowid, childwindowid)\n        # Click the Account Tab\n        self.logger.info(\"*****Click the Account Tab*****\")\n        self.Op.clickAccountTab()\n        time.sleep(3)\n        # assert \"Accounts\" in self.driver.title, \"Failed to navigate to the Account tab.\"\n        # Click the Account Name\n        self.logger.info(\"*****Click the Account Name*****\")\n        self.Op.clickAccountName()\n        time.sleep(3)\n        self.driver.execute_script(\"window.scrollBy(0, 220)\")\n        time.sleep(5)\n        # Click the Location Name\n        self.logger.info(\"*****Click the Location Name*****\")\n>       self.Op.clickLocationUat()\n\ntestCases\\test_salesOpportunity.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\OpportunityPage.py:39: in clickLocationUat\n    location=WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.XPATH, \"//a[contains(text(),'Georgia Aquarium For Testing')]\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ca5fe2abecb7c588d7ab19fdd36bc139\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001DADD276980>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00F633E3+25059]\nE       \t(No symbol) [0x00EECDE4]\nE       \t(No symbol) [0x00DCBEC3]\nE       \t(No symbol) [0x00E0FD86]\nE       \t(No symbol) [0x00E0FFCB]\nE       \t(No symbol) [0x00E4D952]\nE       \t(No symbol) [0x00E31F44]\nE       \t(No symbol) [0x00E4B51E]\nE       \t(No symbol) [0x00E31C96]\nE       \t(No symbol) [0x00E03FAC]\nE       \t(No symbol) [0x00E04F3D]\nE       \tGetHandleVerifier [0x01255543+3113795]\nE       \tGetHandleVerifier [0x0126A20A+3198986]\nE       \tGetHandleVerifier [0x012629E2+3168226]\nE       \tGetHandleVerifier [0x01003250+680016]\nE       \t(No symbol) [0x00EF572D]\nE       \t(No symbol) [0x00EF29D8]\nE       \t(No symbol) [0x00EF2B75]\nE       \t(No symbol) [0x00EE57D0]\nE       \t(No symbol) [0x75EF7BA9]\nE       \tRtlInitializeExceptionChain [0x77C0BDAB+107]\nE       \tRtlClearBits [0x77C0BD2F+191]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "3b3ddb76-4483-49e4-872d-80e8a4f0a0e2-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "85d5ebef-c44e-4609-97f8-2a9185a9dcbd-attachment.txt", "type": "text/plain"}], "start": 1732637964729, "stop": 1732638000563, "uuid": "30b7bd46-c951-4e99-aa81-b425027a3bf3", "historyId": "d08e0d5dbdba94461afb41669c70da53", "testCaseId": "d08e0d5dbdba94461afb41669c70da53", "fullName": "test_salesOpportunity.Test_SalesOpportunity#test_Opportunity", "labels": [{"name": "tag", "value": "sales"}, {"name": "suite", "value": "test_salesOpportunity"}, {"name": "subSuite", "value": "Test_SalesOpportunity"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "2628-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesOpportunity"}]}