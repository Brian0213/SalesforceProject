{"name": "test_salesCheck", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"paper-tab[role='tab'][class='noOverflow widthWithOverflow'][label='Labor']\"}\n  (Session info: chrome=129.0.6668.90)\nStacktrace:\n\tGetHandleVerifier [0x00847143+25587]\n\t(No symbol) [0x007DA2E4]\n\t(No symbol) [0x006D2113]\n\t(No symbol) [0x00716F62]\n\t(No symbol) [0x007171FB]\n\t(No symbol) [0x0070D151]\n\t(No symbol) [0x0073ABE4]\n\t(No symbol) [0x0070D044]\n\t(No symbol) [0x0073AE34]\n\t(No symbol) [0x00755370]\n\t(No symbol) [0x0073A936]\n\t(No symbol) [0x0070BA73]\n\t(No symbol) [0x0070C4CD]\n\tGetHandleVerifier [0x00B24C63+3030803]\n\tGetHandleVerifier [0x00B76B99+3366473]\n\tGetHandleVerifier [0x008D95F2+624802]\n\tGetHandleVerifier [0x008E0E6C+655644]\n\t(No symbol) [0x007E2C9D]\n\t(No symbol) [0x007DFD68]\n\t(No symbol) [0x007DFF05]\n\t(No symbol) [0x007D2336]\n\t(No symbol) [0x762F7BA9]\n\tRtlInitializeExceptionChain [0x7787BDAB+107]\n\tRtlClearBits [0x7787BD2F+191]", "trace": "self = <testCases.test_salesCheck.Test_SalesCheck object at 0x000001764F4995D0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"72dfad7caed5e5614e77ee89c9a79d7a\")>\n\n    @pytest.mark.sales\n    def test_salesCheck(self, setup):\n        self.logger.info(\"*****Starting The Sales Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(7)\n    \n        self.qp = QuotePage(self.driver)\n        self.logger.info(\"*****Starting The Quote Page Test*****\")\n        # Click the CPQ Quote Tab\n        self.qp.clickCpqQuoteTab()\n        time.sleep(5)\n        self.qp.SalesQuote1()\n        time.sleep(4)\n        # self.qp.clickEditBtn()\n        # windowsIDs = self.driver.window_handles\n        # parentwindowid = windowsIDs[0]\n        # childwindowid = windowsIDs[1]\n        # print(parentwindowid, childwindowid)\n        # self.driver.switch_to.window(childwindowid)\n        # time.sleep(4)\n        # self.driver.find_element(By.XPATH, '//input[@name=\"Deposit__c\"]').send_keys(10)\n        # time.sleep(4)\n        # self.driver.find_element(By.XPATH, \"//div[@class='slds-combobox__form-element slds-input-has-icon slds-input-has-icon_right']\").click()\n        # self.driver.find_element(By.XPATH, '//button[@class-value=\"slds-combobox__input slds-input_faux fix-slds-input_faux slds-combobox__input-value\"]').click()\n        # time.sleep(4)\n        # self.driver.find_element(By.XPATH, '//div[@class=\"slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click\"]').click()\n        # time.sleep(4)\n        # self.driver.find_element(By.XPATH, \"//span[contains(text(),'Material Only')]\").click()\n        # self.driver.execute_script(\"window.scrollBy(0, 900)\")\n        # Click the Edit Lines Button\n        self.qp.clickEditlines()\n        time.sleep(7)\n        # Switch to Frame\n        self.driver.switch_to.frame(0)\n    \n        self.logger.info(\"*****Starting The Quote Line Editor Test*****\")\n        self.eqp = EditQuotePage(self.driver)\n        # self.logger.info(\"*****Click The Add Products Button *****\")\n        # self.eqp.AddProdButton()\n        # time.sleep(3)\n        # self.logger.info(\"*****Lookup a Sales Product*****\")\n        # self.eqp.SearchProduct(self.searchitem)\n        # time.sleep(3)\n        # self.logger.info(\"*****Search the Sales Product*****\")\n        # self.eqp.SearchButton()\n        # time.sleep(3)\n        # self.logger.info(\"*****Click The Apply Button*****\")\n        # self.eqp.ApplyButton()\n        # time.sleep(3)\n        # self.logger.info(\"*****Click the Product Checkbox*****\")\n        # self.eqp.ProductCheckbox()\n        # time.sleep(3)\n        # self.logger.info(\"*****Click the Select Button to Add the Product to the QLE*****\")\n        # self.eqp.SelectButton()\n        # time.sleep(5)\n        self.eqp.clickReconfigure()\n        time.sleep(5)\n        self.eqp.ReconFrieght()\n        time.sleep(5)\n>       self.eqp.ReconLabor()\n\ntestCases\\test_salesCheck.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\EditQuotePage.py:597: in ReconLabor\n    shadow5 = shadow4.find_element(By.CSS_SELECTOR, \"paper-tab[role='tab'][class='noOverflow widthWithOverflow'][label='Labor']\").shadow_root\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\shadowroot.py:54: in find_element\n    return self._execute(Command.FIND_ELEMENT_FROM_SHADOW_ROOT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\shadowroot.py:83: in _execute\n    return self.session.execute(command, params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001764F430110>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\t(No symbol) [0x762F7BA9]\\\\n\\\\tRtlInitializeExceptionChain [0x7787BDAB+107]\\\\n\\\\tRtlClearBits [0x7787BD2F+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"paper-tab[role='tab'][class='noOverflow widthWithOverflow'][label='Labor']\"}\nE         (Session info: chrome=129.0.6668.90)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00847143+25587]\nE       \t(No symbol) [0x007DA2E4]\nE       \t(No symbol) [0x006D2113]\nE       \t(No symbol) [0x00716F62]\nE       \t(No symbol) [0x007171FB]\nE       \t(No symbol) [0x0070D151]\nE       \t(No symbol) [0x0073ABE4]\nE       \t(No symbol) [0x0070D044]\nE       \t(No symbol) [0x0073AE34]\nE       \t(No symbol) [0x00755370]\nE       \t(No symbol) [0x0073A936]\nE       \t(No symbol) [0x0070BA73]\nE       \t(No symbol) [0x0070C4CD]\nE       \tGetHandleVerifier [0x00B24C63+3030803]\nE       \tGetHandleVerifier [0x00B76B99+3366473]\nE       \tGetHandleVerifier [0x008D95F2+624802]\nE       \tGetHandleVerifier [0x008E0E6C+655644]\nE       \t(No symbol) [0x007E2C9D]\nE       \t(No symbol) [0x007DFD68]\nE       \t(No symbol) [0x007DFF05]\nE       \t(No symbol) [0x007D2336]\nE       \t(No symbol) [0x762F7BA9]\nE       \tRtlInitializeExceptionChain [0x7787BDAB+107]\nE       \tRtlClearBits [0x7787BD2F+191]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:249: NoSuchElementException"}, "attachments": [{"name": "log", "source": "b89e31bb-3d8e-4b58-a0c9-8b95aa0987a1-attachment.txt", "type": "text/plain"}], "start": 1728329462923, "stop": 1728329512105, "uuid": "2c3667b8-645b-43f5-ab61-40d2b07362aa", "historyId": "5fee88f8c11c6d1c530a22c8975e4478", "testCaseId": "5fee88f8c11c6d1c530a22c8975e4478", "fullName": "test_salesCheck.Test_SalesCheck#test_salesCheck", "labels": [{"name": "tag", "value": "sales"}, {"name": "suite", "value": "test_salesCheck"}, {"name": "subSuite", "value": "Test_SalesCheck"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "6628-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesCheck"}]}