{"name": "test_Opportunity[3-5]", "status": "failed", "statusDetails": {"message": "AssertionError: Failed to create the opportunity.\nassert 'Opportunity Details' in 'Georgia Aquarium For Testing | Salesforce'\n +  where 'Georgia Aquarium For Testing | Salesforce' = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"255336d84f40757a177f19c6470590d3\")>.title\n +    where <selenium.webdriver.chrome.webdriver.WebDriver (session=\"255336d84f40757a177f19c6470590d3\")> = <testCases.test_salesOpportunity.Test_SalesOpportunity object at 0x00000112C30E8F10>.driver", "trace": "self = <testCases.test_salesOpportunity.Test_SalesOpportunity object at 0x00000112C30E8F10>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"255336d84f40757a177f19c6470590d3\")>\n\n    @pytest.mark.sales\n    def test_Opportunity(self, setup):\n        self.logger.info(\"*****Starting The Sales Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # assert self.driver.current_window_handle == self.baseURL, \"Failed to open the website URL.\"\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(7)\n        assert \"Home | Salesforce\" in self.driver.title, \"Failed to log in; Home | Salesforce page not displayed.\"\n    \n        self.Op = OpportunityPage(self.driver)\n        windowsIDs = self.driver.window_handles\n        parentwindowid = windowsIDs[0]\n        childwindowid = windowsIDs[1]\n        print(parentwindowid, childwindowid)\n        # Click the Account Tab\n        self.logger.info(\"*****Click the Account Tab*****\")\n        self.Op.clickAccountTab()\n        time.sleep(3)\n        assert \"Accounts\" in self.driver.title, \"Failed to navigate to the Account tab.\"\n        # Click the Account Name\n        self.logger.info(\"*****Click the Account Name*****\")\n        self.Op.clickAccountName()\n        time.sleep(3)\n        self.driver.execute_script(\"window.scrollBy(0, 220)\")\n        time.sleep(5)\n        # Click the Location Name\n        self.logger.info(\"*****Click the Location Name*****\")\n        self.Op.clickLocationUat()\n        # Click the New Opportunity Button\n        self.logger.info(\"*****Click the New Opportunity Button*****\")\n        self.Op.clickNewOpp()\n        time.sleep(5)\n        # Switch to the New Opportunity Window\n        self.logger.info(\"*****Switch to the New Opportunity Window*****\")\n        self.driver.switch_to.window(childwindowid)\n        time.sleep(5)\n        assert \"Georgia Aquarium For Testing | Salesforce\" in self.driver.title, \"Failed to switch to the New Opportunity window.\"\n        # Select the Miner Sales Opportunity Record Type\n        self.logger.info(\"*****Select the Miner Sales Opportunity Record Type*****\")\n        self.Op.clickMinSales()\n        time.sleep(8)\n        # Click the New Opportunity Window Next Button\n        # self.logger.info(\"*****Click the New Opportunity Window Next Button*****\")\n        self.driver.find_element(By.XPATH, \"//button[normalize-space()='Next']\").click()\n        time.sleep(3)\n        # Enter a value in the Opportunity Field\n        self.logger.info(\"*****Enter a value in the Opportunity Field*****\")\n        self.Op.enterOppName(self.opportunity)\n        time.sleep(3)\n        # Select Customer Account\n        self.logger.info(\"*****Select Customer Account*****\")\n        self.Op.selAccount()\n        time.sleep(3)\n        # # Click the Lookup Field\n        # self.Op.lookupAccount11()\n        # time.sleep(3)\n        # # Fill the Lookup Field with the Desired Selection\n        # self.Op.lookupAccount2()\n        # time.sleep(3)\n        # Select the Paying Party\n        self.logger.info(\"*****Select the Paying Party*****\")\n        self.Op.payParty()\n        # self.Op.payingParty(self.party)\n        time.sleep(3)\n        # Click the Primary Contact Field\n        self.logger.info(\"*****Click the Primary Contact Field*****\")\n        self.Op.primaryContact()\n        time.sleep(5)\n        # Scroll Down to a selection\n        self.logger.info(\"*****Scroll Down to a selection*****\")\n        self.Op.primaryContact1()\n        time.sleep(4)\n        # Scroll Down to a selection\n        # self.Op.primaryContact3()\n        # time.sleep(3)\n        # Scroll Down to a selection\n        # self.Op.primaryContact4()\n        # time.sleep(3)\n        # Fill the Primary Contact with the Desired Selection\n        self.logger.info(\"*****Fill the Primary Contact with the Desired Selection*****\")\n        self.Op.primaryContact2()\n        time.sleep(3)\n        # Click the Order Type Field\n        self.logger.info(\"*****Click the Order Type Field*****\")\n        self.Op.orderType()\n        time.sleep(3)\n        # Select the Order Type Pick\n        self.logger.info(\"*****Select the Order Type Pick*****\")\n        self.Op.servcomm()\n        time.sleep(3)\n        # Scroll the Order Sub Field into view\n        self.logger.info(\"*****Scroll the Order Sub Field into view*****\")\n        self.Op.orderSubScr()\n        time.sleep(3)\n        # Click the Order Sub Type Field\n        self.logger.info(\"*****Click the Order Sub Type Field*****\")\n        self.Op.orderSub()\n        # self.Op.orderSubType()\n        time.sleep(3)\n        # Select the Order Sub Type Pick\n        self.logger.info(\"*****Select the Order Sub Type Pick*****\")\n        self.Op.pickRepair()\n        time.sleep(3)\n        # Click the Next Button in the New Opportunity Window\n        self.logger.info(\"*****Click the Next Button in the New Opportunity Window*****\")\n        self.Op.newOppoPageButton()\n        time.sleep(5)\n        # Click the Opportunity Success Button\n        self.logger.info(\"*****Click the Opportunity Success Button*****\")\n        self.Op.opportunitySuccess()\n>       assert \"Opportunity Details\" in self.driver.title, \"Failed to create the opportunity.\"\nE       AssertionError: Failed to create the opportunity.\nE       assert 'Opportunity Details' in 'Georgia Aquarium For Testing | Salesforce'\nE        +  where 'Georgia Aquarium For Testing | Salesforce' = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"255336d84f40757a177f19c6470590d3\")>.title\nE        +    where <selenium.webdriver.chrome.webdriver.WebDriver (session=\"255336d84f40757a177f19c6470590d3\")> = <testCases.test_salesOpportunity.Test_SalesOpportunity object at 0x00000112C30E8F10>.driver\n\ntestCases\\test_salesOpportunity.py:160: AssertionError"}, "attachments": [{"name": "log", "source": "94bb6c21-dff9-4f2a-9e9c-fbf18194b869-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "6bd34849-9bb8-4e4c-a636-754df8fdb97e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "__pytest_repeat_step_number", "value": "2"}], "start": 1731343538578, "stop": 1731343631201, "uuid": "39b97b98-7bec-4842-9074-6bf9aef30d5c", "historyId": "01fed3687dd614d1b279fd17fe11f0f9", "testCaseId": "d08e0d5dbdba94461afb41669c70da53", "fullName": "test_salesOpportunity.Test_SalesOpportunity#test_Opportunity", "labels": [{"name": "tag", "value": "sales"}, {"name": "suite", "value": "test_salesOpportunity"}, {"name": "subSuite", "value": "Test_SalesOpportunity"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "9884-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesOpportunity"}]}