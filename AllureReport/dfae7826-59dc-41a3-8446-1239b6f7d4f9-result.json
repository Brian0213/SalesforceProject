{"name": "test_SalesAddCustomProducts", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x010FD933+25811]\n\t(No symbol) [0x0108E314]\n\t(No symbol) [0x00F82523]\n\t(No symbol) [0x00FC7483]\n\t(No symbol) [0x00FC765B]\n\t(No symbol) [0x01006BA2]\n\t(No symbol) [0x00FEAD74]\n\t(No symbol) [0x010046F0]\n\t(No symbol) [0x00FEAAC6]\n\t(No symbol) [0x00FBBEFD]\n\t(No symbol) [0x00FBC8FD]\n\tGetHandleVerifier [0x013CF143+2981091]\n\tGetHandleVerifier [0x01422FF9+3324825]\n\tGetHandleVerifier [0x0118B32F+605903]\n\tGetHandleVerifier [0x01192CBC+637020]\n\t(No symbol) [0x01096F4D]\n\t(No symbol) [0x01093DD8]\n\t(No symbol) [0x01093F75]\n\t(No symbol) [0x01086406]\n\t(No symbol) [0x76AB7BA9]\n\tRtlInitializeExceptionChain [0x776BBDAB+107]\n\tRtlClearBits [0x776BBD2F+191]", "trace": "self = <testCases.test_salesCustProducts.Test_SalesAddCustomProducts object at 0x000002A03B3385D0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0136d8790a60737162bab6d2e523e488\")>\n\n    @pytest.mark.sale2e\n    def test_SalesAddCustomProducts(self, setup):\n        self.logger.info(\"*****Starting The Quote -> DocuSign Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(5)\n    \n        self.qp = QuotePage(self.driver)\n        self.logger.info(\"*****Starting The Quote Page Test*****\")\n        self.logger.info(\"*****Click The Quote Tab*****\")\n>       self.qp.clickCpqQuoteTab()\n\ntestCases\\test_salesCustProducts.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\QuotePage.py:49: in clickCpqQuoteTab\n    qte_tab = WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.XPATH, \"//span[@class='slds-truncate'][normalize-space()='CPQ Quotes']\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0136d8790a60737162bab6d2e523e488\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002A03B343BA0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x010FD933+25811]\nE       \t(No symbol) [0x0108E314]\nE       \t(No symbol) [0x00F82523]\nE       \t(No symbol) [0x00FC7483]\nE       \t(No symbol) [0x00FC765B]\nE       \t(No symbol) [0x01006BA2]\nE       \t(No symbol) [0x00FEAD74]\nE       \t(No symbol) [0x010046F0]\nE       \t(No symbol) [0x00FEAAC6]\nE       \t(No symbol) [0x00FBBEFD]\nE       \t(No symbol) [0x00FBC8FD]\nE       \tGetHandleVerifier [0x013CF143+2981091]\nE       \tGetHandleVerifier [0x01422FF9+3324825]\nE       \tGetHandleVerifier [0x0118B32F+605903]\nE       \tGetHandleVerifier [0x01192CBC+637020]\nE       \t(No symbol) [0x01096F4D]\nE       \t(No symbol) [0x01093DD8]\nE       \t(No symbol) [0x01093F75]\nE       \t(No symbol) [0x01086406]\nE       \t(No symbol) [0x76AB7BA9]\nE       \tRtlInitializeExceptionChain [0x776BBDAB+107]\nE       \tRtlClearBits [0x776BBD2F+191]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "316960e7-f256-4a9d-aa1f-fa0853dd1cf9-attachment.txt", "type": "text/plain"}], "start": 1726491658731, "stop": 1726491676576, "uuid": "77ec802c-b607-4977-8a1f-bcee3964ca68", "historyId": "f118b2ddafd02b16c59f232d57b47cc2", "testCaseId": "f118b2ddafd02b16c59f232d57b47cc2", "fullName": "test_salesCustProducts.Test_SalesAddCustomProducts#test_SalesAddCustomProducts", "labels": [{"name": "tag", "value": "sale2e"}, {"name": "suite", "value": "test_salesCustProducts"}, {"name": "subSuite", "value": "Test_SalesAddCustomProducts"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "28480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesCustProducts"}]}