{"name": "test_salesCheck", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Closed Won Pending' == 'expected_value'\n  - expected_value\n  + Closed Won Pending", "trace": "self = <testCases.test_salesCheck.Test_SalesCheck object at 0x0000020B649F4990>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8ebe8ab8a08fb41887e63448e9f8885e\")>\n\n    @pytest.mark.sales\n    def test_salesCheck(self, setup):\n        self.logger.info(\"*****Starting The Sales Opportunity Test*****\")\n        # Call the Browser Configuration\n        self.logger.info(\"*****Call the Browser Configuration*****\")\n        self.driver = setup\n        self.driver.implicitly_wait(10)\n        # Open the Website URL\n        self.logger.info(\"*****Open the Website URL*****\")\n        self.driver.get(self.baseURL)\n        # Fit the browser screen\n        self.logger.info(\"*****Fit the browser screen*****\")\n        self.driver.maximize_window()\n        # Define LoginPage Driver\n        self.logger.info(\"*****Define LoginPage Driver*****\")\n        self.lp = LoginPage(self.driver)\n        # Fill the UserName field\n        self.logger.info(\"*****Fill the UserName field*****\")\n        self.lp.setUserName(self.username)\n        # Fill the Password field\n        self.logger.info(\"*****Fill the Password field*****\")\n        self.lp.setPassword(self.password)\n        # Click on the Signin Button\n        self.logger.info(\"*****Click the Signin Button*****\")\n        self.lp.clickSignin()\n        time.sleep(7)\n    \n        self.qp = QuotePage(self.driver)\n        windowsIDs = self.driver.window_handles\n        parentwindowid = windowsIDs[0]\n        childwindowid = windowsIDs[1]\n        print(parentwindowid, childwindowid)\n        # Click the Opportunity Tab\n        self.qp.clickOpportunityTab()\n        time.sleep(3)\n        # Click on an Opportunity ID\n        self.qp.clickOpportunityIDSales()\n        time.sleep(3)\n        # assert \"expected_text\" in self.driver.find_element(By.XPATH, \"//span[@class='test-id__field-label'][normalize-space()='Stage']\").get_attribute(self.driver, \"Closed Won Pending\")\n        # assert self.driver.find_element(By.XPATH, \"//span[@class='test-id__field-label'][normalize-space()='Stage']\").text == 'Closed Won Pending'\n        # assert self.driver.find_element(By.XPATH, \"//span[@class='test-id__field-label'][normalize-space()='Stage']\").get_attribute(\"Closed Won Pending\") == \"Closed Won Pending\"\n        # input_field = self.driver.find_element(By.XPATH, \"//span[@class='test-id__field-label'][normalize-space()='Stage']\")\n        stage = self.driver.find_element(By.XPATH, \"//span[@class='test-id__field-value slds-form-element__static slds-grow word-break-ie11']\").text\n        assert stage == \"Closed Won Pending\", \"Stage Is Not Correct\"\n        assert \"Closed Won Pending\" in stage, \"Stage is Incorrect\"\n>       assert \"Closed Won Pending\" == \"expected_value\"\nE       AssertionError: assert 'Closed Won Pending' == 'expected_value'\nE         - expected_value\nE         + Closed Won Pending\n\ntestCases\\test_salesCheck.py:75: AssertionError"}, "attachments": [{"name": "log", "source": "d815b546-de44-4dce-bcf7-86bd84cd4d3d-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "4683a528-9dd4-44da-8754-ad8141525255-attachment.txt", "type": "text/plain"}], "start": 1724348375169, "stop": 1724348392643, "uuid": "83b38cfe-2716-4617-99c5-b411e2ae5a32", "historyId": "5fee88f8c11c6d1c530a22c8975e4478", "testCaseId": "5fee88f8c11c6d1c530a22c8975e4478", "fullName": "test_salesCheck.Test_SalesCheck#test_salesCheck", "labels": [{"name": "tag", "value": "sales"}, {"name": "suite", "value": "test_salesCheck"}, {"name": "subSuite", "value": "Test_SalesCheck"}, {"name": "host", "value": "OPGLOOJEYINKA"}, {"name": "thread", "value": "15752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_salesCheck"}]}